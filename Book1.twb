<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1112.0850                               -->
<workbook original-version='18.1' source-build='2024.3.1 (20243.24.1112.0850)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Electric_Vehicle_Population_Data' inline='true' name='federated.0akvjy718uikfc1bx1zy1066tbva' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Electric_Vehicle_Population_Data' name='textscan.173bqb105r4b2d15e2kat1em1chn'>
            <connection class='textscan' directory='C:/Users/Mass/Downloads' filename='Electric_Vehicle_Population_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.173bqb105r4b2d15e2kat1em1chn' name='Electric_Vehicle_Population_Data.csv' table='[Electric_Vehicle_Population_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='VIN (1-10)' ordinal='0' />
            <column datatype='string' name='County' ordinal='1' />
            <column datatype='string' name='City' ordinal='2' />
            <column datatype='string' name='State' ordinal='3' />
            <column datatype='integer' name='Postal Code' ordinal='4' />
            <column datatype='integer' name='Model Year' ordinal='5' />
            <column datatype='string' name='Make' ordinal='6' />
            <column datatype='string' name='Model' ordinal='7' />
            <column datatype='string' name='Electric Vehicle Type' ordinal='8' />
            <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='9' />
            <column datatype='integer' name='Electric Range' ordinal='10' />
            <column datatype='integer' name='Base MSRP' ordinal='11' />
            <column datatype='integer' name='Legislative District' ordinal='12' />
            <column datatype='integer' name='DOL Vehicle ID' ordinal='13' />
            <column datatype='string' name='Vehicle Location' ordinal='14' />
            <column datatype='string' name='Electric Utility' ordinal='15' />
            <column datatype='integer' name='2020 Census Tract' ordinal='16' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VIN (1-10)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VIN (1-10)]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>VIN (1-10)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Model Year]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Model Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Vehicle Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electric Vehicle Type]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Electric Vehicle Type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Clean Alternative Fuel Vehicle (CAFV) Eligibility]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Clean Alternative Fuel Vehicle (CAFV) Eligibility</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Range</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Electric Range]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Electric Range</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Base MSRP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Base MSRP]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Base MSRP</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Legislative District</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Legislative District]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Legislative District</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOL Vehicle ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DOL Vehicle ID]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>DOL Vehicle ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vehicle Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Vehicle Location]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Vehicle Location</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electric Utility</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Electric Utility]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>Electric Utility</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020 Census Tract</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2020 Census Tract]</local-name>
            <parent-name>[Electric_Vehicle_Population_Data.csv]</parent-name>
            <remote-alias>2020 Census Tract</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK([Calculation_402227769648648192])'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_402227769648648192] / TOTAL([Calculation_402227769648648192])'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation3]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_402227769648648192] / TOTAL([Calculation_402227769648648192])'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column caption='Total Vehichles' datatype='integer' name='[Calculation_402227769648648192]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count([DOL Vehicle ID])' />
      </column>
      <column caption=' Average Electric Range' datatype='real' name='[Calculation_402227769650028545]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Electric Range])' />
      </column>
      <column caption='Total BEV Vehicles ' datatype='integer' name='[Calculation_402227769651859458]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(if[Electric Vehicle Type]=&quot;Battery Electric Vehicle (BEV)&quot;&#13;&#10;then [DOL Vehicle ID]&#13;&#10;end)' />
      </column>
      <column caption='Total BHEV Vechiles' datatype='integer' name='[Calculation_402227769653587971]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(if [Electric Vehicle Type]=&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;&#13;&#10;then [DOL Vehicle ID]&#13;&#10;end)' />
      </column>
      <column caption='% of BHEV Vechicles' datatype='real' name='[Calculation_402227769654210564]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_402227769653587971]/[Calculation_402227769648648192]' />
      </column>
      <column caption='% Of BEV Vehicles' datatype='real' name='[Calculation_402227769655181317]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_402227769651859458]/[Calculation_402227769648648192]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
          <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
          <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not eligible' />
        </aliases>
      </column>
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
      <column datatype='string' name='[Make]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Model]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='id' datatype='string' name='[VIN (1-10)]' role='dimension' type='nominal' />
      <column caption='Electric_Vehicle_Population_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428]' role='measure' type='quantitative' />
      <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
      <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
      <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Inclusions (Electric Vehicle Type,Make,Model)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Electric Vehicle Type:nk]' />
          <groupfilter function='level-members' level='[none:Make:nk]' />
          <groupfilter function='level-members' level='[none:Model:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='palette'>
            <map to='#55aa7f'>
              <bucket>&quot;Eligibility unknown as battery range has not been researched&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clean Alternative Fuel Vehicle Eligible&quot;</bucket>
            </map>
            <map to='#aaff7f'>
              <bucket>&quot;Not eligible due to low battery range&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <filter class='quantitative' column='[Model Year]' filter-group='2' included-values='in-range'>
        <min>2011</min>
      </filter>
      <object-graph>
        <objects>
          <object caption='Electric_Vehicle_Population_Data.csv' id='Electric_Vehicle_Population_Data.csv_F45912A1C19945C1BDCE343CEEDA4428'>
            <properties context=''>
              <relation connection='textscan.173bqb105r4b2d15e2kat1em1chn' name='Electric_Vehicle_Population_Data.csv' table='[Electric_Vehicle_Population_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='VIN (1-10)' ordinal='0' />
                  <column datatype='string' name='County' ordinal='1' />
                  <column datatype='string' name='City' ordinal='2' />
                  <column datatype='string' name='State' ordinal='3' />
                  <column datatype='integer' name='Postal Code' ordinal='4' />
                  <column datatype='integer' name='Model Year' ordinal='5' />
                  <column datatype='string' name='Make' ordinal='6' />
                  <column datatype='string' name='Model' ordinal='7' />
                  <column datatype='string' name='Electric Vehicle Type' ordinal='8' />
                  <column datatype='string' name='Clean Alternative Fuel Vehicle (CAFV) Eligibility' ordinal='9' />
                  <column datatype='integer' name='Electric Range' ordinal='10' />
                  <column datatype='integer' name='Base MSRP' ordinal='11' />
                  <column datatype='integer' name='Legislative District' ordinal='12' />
                  <column datatype='integer' name='DOL Vehicle ID' ordinal='13' />
                  <column datatype='string' name='Vehicle Location' ordinal='14' />
                  <column datatype='string' name='Electric Utility' ordinal='15' />
                  <column datatype='integer' name='2020 Census Tract' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0akvjy718uikfc1bx1zy1066tbva'>
      <datasources>
        <datasource caption='Electric_Vehicle_Population_Data' name='federated.0akvjy718uikfc1bx1zy1066tbva' />
      </datasources>
      <datasource-dependencies datasource='federated.0akvjy718uikfc1bx1zy1066tbva'>
        <column caption='Total Vehichles' datatype='integer' name='[Calculation_402227769648648192]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='count([DOL Vehicle ID])' />
        </column>
        <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
        <column datatype='string' name='[Make]' role='dimension' type='nominal' />
        <column datatype='string' name='[Model]' role='dimension' type='nominal' />
        <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
        <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='[Calculation_402227769648648192]' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </filter>
      <filter class='categorical' column='[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;330E&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;500&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;530E&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;740E&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;745E&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;745LE&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;918&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;A3&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;A7&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;A8 E&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;ACCORD&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;AIR&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;ARIYA&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;AVIATOR&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;B-CLASS&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;BENTAYGA&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EUV&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EV&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;BZ4X&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-CLASS&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-MAX&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;C40&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;CAYENNE&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;CITY&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;CLARITY&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;CORSAIR&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;COUNTRYMAN&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;CROSSTREK&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;CT6&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;CX-90&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-GOLF&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON GT&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON SPORTBACK&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;EDV&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;ELR&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQ FORTWO&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQB-CLASS&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SEDAN&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SUV&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SEDAN&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SUV&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;ESCAPE&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;EV6&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;F-150&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;FLYING SPUR&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;FOCUS&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;FUSION&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;G80&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLC-CLASS&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLE-CLASS&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;GRAND CHEROKEE&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV60&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV70&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;HARDTOP&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-MIEV&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-PACE&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;I3&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;I4&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;I8&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;ID.4&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 5&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 6&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;IX&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;KARMA&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA ELECTRIC&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;LEAF&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;LYRIQ&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL 3&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL S&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL X&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL Y&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;MUSTANG MACH-E&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;NIRO&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;NX&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;OPTIMA&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;OUTLANDER&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;PACIFICA&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;PANAMERA&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PLUG-IN&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PRIME&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;PS2&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q4&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5 E&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q8&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1S&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1T&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER SPORT&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4 PRIME&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;ROADSTER&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;RS E-TRON GT&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;RZ 450E&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;S-CLASS&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;S60&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;S90&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;SANTA FE&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOLTERRA&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;SONATA&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;SORENTO&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL EV&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPARK&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPORTAGE&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;TAYCAN&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;TONALE&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;TUCSON&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;V60&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;VOLT&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;WRANGLER&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;X3&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;X5&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC40&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC60&quot;' />
          <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC90&quot;' />
        </groupfilter>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name=' Avg Electric Range'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0akvjy718uikfc1bx1zy1066tbva' />
          </datasources>
          <datasource-dependencies datasource='federated.0akvjy718uikfc1bx1zy1066tbva'>
            <column caption='Total Vehichles' datatype='integer' name='[Calculation_402227769648648192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([DOL Vehicle ID])' />
            </column>
            <column caption=' Average Electric Range' datatype='real' name='[Calculation_402227769650028545]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Electric Range])' />
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Electric Range]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_402227769650028545]' derivation='User' name='[usr:Calculation_402227769650028545:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</column>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769650028545:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontalignment='0' fontsize='22'>Æ       </run>
                <run fontalignment='0' fontcolor='#59a14f' fontname='Tableau Bold' fontsize='22'>Avg Electric Range</run>
                <run>Æ&#10;</run>
                <run fontname='Tableau Bold' fontsize='22'><![CDATA[<[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769650028545:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B39E17A8-A9C7-4F1E-A79D-B2218195E3C5}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0akvjy718uikfc1bx1zy1066tbva' />
          </datasources>
          <datasource-dependencies datasource='federated.0akvjy718uikfc1bx1zy1066tbva'>
            <column caption='Total Vehichles' datatype='integer' name='[Calculation_402227769648648192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([DOL Vehicle ID])' />
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</column>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model Year:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{40E44E17-A386-4038-9743-9834BFCDB17F}' />
    </worksheet>
    <worksheet lock-quick-filters='true' name='Top 10 Total Vehicles by Make'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0akvjy718uikfc1bx1zy1066tbva' />
          </datasources>
          <datasource-dependencies datasource='federated.0akvjy718uikfc1bx1zy1066tbva'>
            <column caption='Total Vehichles' datatype='integer' name='[Calculation_402227769648648192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([DOL Vehicle ID])' />
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_402227769648648192]' derivation='User' name='[usr:Calculation_402227769648648192:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</column>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' value='N' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4282872676849365' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#8cd17d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</rows>
        <cols>[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]</cols>
      </table>
      <simple-id uuid='{EE424B7B-DE48-4B12-A232-CEAC8D3AEC06}' />
    </worksheet>
    <worksheet name='Top 10 Total Vehicles by Model'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0akvjy718uikfc1bx1zy1066tbva' />
          </datasources>
          <datasource-dependencies datasource='federated.0akvjy718uikfc1bx1zy1066tbva'>
            <column caption='Total Vehichles' datatype='integer' name='[Calculation_402227769648648192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([DOL Vehicle ID])' />
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column-instance column='[Electric Vehicle Type]' derivation='None' name='[none:Electric Vehicle Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_402227769648648192]' derivation='User' name='[pcto:usr:Calculation_402227769648648192:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0akvjy718uikfc1bx1zy1066tbva].[Inclusions (Electric Vehicle Type,Make,Model)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Electric Vehicle Type:nk]' member='&quot;Battery Electric Vehicle (BEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON GT&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-TRON SPORTBACK&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q4&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q8&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;RS E-TRON GT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;AZURE DYNAMICS&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT CONNECT ELECTRIC&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;I4&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;IX&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;LYRIQ&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EUV&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;BOLT EV&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPARK&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;FIAT&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;500&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;F-150&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;FOCUS&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;MUSTANG MACH-E&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;TRANSIT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;GENESIS&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;G80&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV60&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;GV70&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 5&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ 6&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;KONA ELECTRIC&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;JAGUAR&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-PACE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;EV6&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOUL EV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;RZ 450E&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;LUCID&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;AIR&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;B-CLASS&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQB-CLASS&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQE-CLASS SUV&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SEDAN&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQS-CLASS SUV&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;HARDTOP&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;I-MIEV&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;NISSAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;ARIYA&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;LEAF&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;POLESTAR&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;PS2&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;TAYCAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;RIVIAN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;EDV&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1S&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;R1T&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;SMART&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;EQ FORTWO&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;FORTWO ELECTRIC DRIVE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;SOLTERRA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;TESLA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL 3&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL S&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL X&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;MODEL Y&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;ROADSTER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;TH!NK&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;CITY&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;BZ4X&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;VOLKSWAGEN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;E-GOLF&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;ID.4&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;C40&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC40&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Electric Vehicle Type:nk]' member='&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;ALFA ROMEO&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;TONALE&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;AUDI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;A3&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;A7&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;A8 E&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;Q5 E&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;BENTLEY&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;BENTAYGA&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;FLYING SPUR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;BMW&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;330E&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;530E&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;740E&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;745E&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;745LE&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;I3&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;I8&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;X3&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;X5&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;CADILLAC&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;CT6&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;ELR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;CHEVROLET&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;VOLT&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;CHRYSLER&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;PACIFICA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;FISKER&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;KARMA&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;FORD&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-MAX&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;ESCAPE&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;FUSION&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;HONDA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;ACCORD&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;CLARITY&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;HYUNDAI&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;IONIQ&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;SANTA FE&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;SONATA&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;TUCSON&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;JEEP&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;GRAND CHEROKEE&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;WRANGLER&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;KIA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;NIRO&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;OPTIMA&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;SORENTO&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;SPORTAGE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;LAND ROVER&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;RANGE ROVER SPORT&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;LEXUS&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;NX&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;LINCOLN&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;AVIATOR&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;CORSAIR&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;MAZDA&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;CX-90&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;MERCEDES-BENZ&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;C-CLASS&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLC-CLASS&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;GLE-CLASS&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;S-CLASS&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;MINI&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;COUNTRYMAN&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;MITSUBISHI&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;OUTLANDER&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;PORSCHE&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;918&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;CAYENNE&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;PANAMERA&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;SUBARU&quot;' />
                    <groupfilter function='member' level='[none:Model:nk]' member='&quot;CROSSTREK&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;TOYOTA&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PLUG-IN&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;PRIUS PRIME&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;RAV4 PRIME&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Make:nk]' member='&quot;VOLVO&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;S60&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;S90&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;V60&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC60&quot;' />
                      <groupfilter function='member' level='[none:Model:nk]' member='&quot;XC90&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Electric Vehicle Type:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Battery Electric Vehicle (BEV)&quot;</bucket>
              <bucket>&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <natural-sort column='[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]' direction='ASC' />
          <slices>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[Inclusions (Electric Vehicle Type,Make,Model)]</column>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</column>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0akvjy718uikfc1bx1zy1066tbva].[pcto:usr:Calculation_402227769648648192:qk]' value='N' />
            <format attr='color' value='#59a14f' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Electric Vehicle Type:nk]' value='316' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0akvjy718uikfc1bx1zy1066tbva].[pcto:usr:Calculation_402227769648648192:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk] / ([federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk] / [federated.0akvjy718uikfc1bx1zy1066tbva].[none:Electric Vehicle Type:nk]))</rows>
        <cols>[federated.0akvjy718uikfc1bx1zy1066tbva].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{03A069BC-AC06-440B-9BAA-A07C1B0A2047}' />
    </worksheet>
    <worksheet name='Total BEV Vehicles '>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0akvjy718uikfc1bx1zy1066tbva' />
          </datasources>
          <datasource-dependencies datasource='federated.0akvjy718uikfc1bx1zy1066tbva'>
            <column caption='Total Vehichles' datatype='integer' name='[Calculation_402227769648648192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([DOL Vehicle ID])' />
            </column>
            <column caption='Total BEV Vehicles ' datatype='integer' name='[Calculation_402227769651859458]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(if[Electric Vehicle Type]=&quot;Battery Electric Vehicle (BEV)&quot;&#13;&#10;then [DOL Vehicle ID]&#13;&#10;end)' />
            </column>
            <column caption='% Of BEV Vehicles' datatype='real' name='[Calculation_402227769655181317]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_402227769651859458]/[Calculation_402227769648648192]' />
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_402227769651859458]' derivation='User' name='[usr:Calculation_402227769651859458:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_402227769655181317]' derivation='User' name='[usr:Calculation_402227769655181317:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model Year:qk]' included-values='in-range' />
          <slices>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model Year:qk]</column>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</column>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769655181317:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769651859458:qk]' />
              <text column='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769655181317:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontalignment='0' fontname='Tableau Bold' fontsize='22'>Æ           </run>
                <run fontalignment='0' fontcolor='#59a14f' fontname='Tableau Bold' fontsize='22'>Total BEV Vehicles </run>
                <run>Æ&#10;</run>
                <run fontname='Tableau Bold' fontsize='22'><![CDATA[<[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769651859458:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#8cd17d' fontname='Tableau Bold' fontsize='15'><![CDATA[% Of Total : <[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769655181317:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F645AB39-0D47-4C7B-B6D5-97EE5BF1EF16}' />
    </worksheet>
    <worksheet name='Total BHEV Vehicles '>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0akvjy718uikfc1bx1zy1066tbva' />
          </datasources>
          <datasource-dependencies datasource='federated.0akvjy718uikfc1bx1zy1066tbva'>
            <column caption='Total Vehichles' datatype='integer' name='[Calculation_402227769648648192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([DOL Vehicle ID])' />
            </column>
            <column caption='Total BHEV Vechiles' datatype='integer' name='[Calculation_402227769653587971]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(if [Electric Vehicle Type]=&quot;Plug-in Hybrid Electric Vehicle (PHEV)&quot;&#13;&#10;then [DOL Vehicle ID]&#13;&#10;end)' />
            </column>
            <column caption='% of BHEV Vechicles' datatype='real' name='[Calculation_402227769654210564]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_402227769653587971]/[Calculation_402227769648648192]' />
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Electric Vehicle Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_402227769653587971]' derivation='User' name='[usr:Calculation_402227769653587971:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_402227769654210564]' derivation='User' name='[usr:Calculation_402227769654210564:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</column>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769654210564:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769654210564:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769653587971:qk]' />
              <text column='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769654210564:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontalignment='0' fontcolor='#59a14f' fontname='Tableau Bold' fontsize='22'>          Total BHEV Vechiles</run>
                <run>Æ&#10;</run>
                <run fontname='Tableau Bold' fontsize='22'><![CDATA[<[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769653587971:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#8cd17d' fontname='Tableau Bold' fontsize='15'><![CDATA[% Of Total : <[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769654210564:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{58B0C000-DE3F-4422-8677-E78CDB608936}' />
    </worksheet>
    <worksheet name='Total Vehicles'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0akvjy718uikfc1bx1zy1066tbva' />
          </datasources>
          <datasource-dependencies datasource='federated.0akvjy718uikfc1bx1zy1066tbva'>
            <column caption='Total Vehichles' datatype='integer' name='[Calculation_402227769648648192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([DOL Vehicle ID])' />
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_402227769648648192]' derivation='User' name='[usr:Calculation_402227769648648192:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</column>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontalignment='0' fontcolor='#59a14f' fontname='Tableau Bold' fontsize='22'>                         Total Vehicles</run>
                <run>Æ&#10;</run>
                <run fontname='Tableau Bold' fontsize='22'><![CDATA[<[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E680E5BD-4D61-4E57-843C-5E08D004BB90}' />
    </worksheet>
    <worksheet name='Total Vehicles by CAFV Eligibility'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0akvjy718uikfc1bx1zy1066tbva' />
          </datasources>
          <datasource-dependencies datasource='federated.0akvjy718uikfc1bx1zy1066tbva'>
            <column caption='Total Vehichles' datatype='integer' name='[Calculation_402227769648648192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([DOL Vehicle ID])' />
            </column>
            <column datatype='string' name='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Clean Alternative Fuel Vehicle Eligible&quot;' value='CAFV Eligible' />
                <alias key='&quot;Eligibility unknown as battery range has not been researched&quot;' value='CAFV unknown' />
                <alias key='&quot;Not eligible due to low battery range&quot;' value='CAFV Not eligible' />
              </aliases>
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column-instance column='[Clean Alternative Fuel Vehicle (CAFV) Eligibility]' derivation='None' name='[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' pivot='key' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_402227769648648192]' derivation='User' name='[usr:Calculation_402227769648648192:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</column>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
              <wedge-size column='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' />
              <text column='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' />
              <text column='[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D5B6D74C-04F9-4C1E-A23E-5A184BC8BBBB}' />
    </worksheet>
    <worksheet name='Total Vehicles by Model Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0akvjy718uikfc1bx1zy1066tbva' />
          </datasources>
          <datasource-dependencies datasource='federated.0akvjy718uikfc1bx1zy1066tbva'>
            <column caption='Total Vehichles' datatype='integer' name='[Calculation_402227769648648192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([DOL Vehicle ID])' />
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Model Year]' role='dimension' type='quantitative' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model Year]' derivation='None' name='[none:Model Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_402227769648648192]' derivation='User' name='[usr:Calculation_402227769648648192:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</column>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model Year:qk]' field-type='quantitative' min='2011' range-type='fixedmin' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' field-type='quantitative' max='38724' min='-300' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' scope='rows' value='false' />
            <format attr='display' class='1' field='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#8cd17d4b' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-format' id='refline0' value='n#,##0;(#,##0)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <reference-line axis-column='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='avg:&lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
                <format attr='mark-color' value='#59a14f' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='solid' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk] + [federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk])</rows>
        <cols>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model Year:qk]</cols>
      </table>
      <simple-id uuid='{4F11AA93-D70B-4460-8C93-FFD3727E2A13}' />
    </worksheet>
    <worksheet name='Total Vehicles by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Electric_Vehicle_Population_Data' name='federated.0akvjy718uikfc1bx1zy1066tbva' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0akvjy718uikfc1bx1zy1066tbva'>
            <column caption='Total Vehichles' datatype='integer' name='[Calculation_402227769648648192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count([DOL Vehicle ID])' />
            </column>
            <column datatype='integer' name='[DOL Vehicle ID]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_402227769648648192]' derivation='User' name='[usr:Calculation_402227769648648192:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0akvjy718uikfc1bx1zy1066tbva].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0akvjy718uikfc1bx1zy1066tbva].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.0akvjy718uikfc1bx1zy1066tbva].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;AK&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;HI&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:State:nk]</column>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[Latitude (generated)]</column>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[Longitude (generated)]</column>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</column>
            <column>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0akvjy718uikfc1bx1zy1066tbva].[none:State:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0akvjy718uikfc1bx1zy1066tbva].[none:State:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0akvjy718uikfc1bx1zy1066tbva].[none:State:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' />
              <lod column='[federated.0akvjy718uikfc1bx1zy1066tbva].[none:State:nk]' />
              <color column='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' />
              <geometry column='[federated.0akvjy718uikfc1bx1zy1066tbva].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0akvjy718uikfc1bx1zy1066tbva].[Latitude (generated)]</rows>
        <cols>[federated.0akvjy718uikfc1bx1zy1066tbva].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{870F42C9-3136-4C17-893E-9DD02FECEDE8}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#59a14f' fontname='Tableau Bold' fontsize='22'>Electric Vehicle Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='51' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='45' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
              <zone h='6445' id='46' type-v2='title' w='99000' x='500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39444' id='43' param='horz' type-v2='layout-flow' w='99000' x='500' y='7334'>
                <zone h='39444' id='29' param='vert' type-v2='layout-flow' w='99000' x='500' y='7334'>
                  <zone fixed-size='347' h='39444' id='36' is-fixed='true' type-v2='empty' w='99000' x='500' y='7334'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='271' h='33556' id='47' is-fixed='true' name='Top 10 Total Vehicles by Model' w='36500' x='250' y='66667'>
          <layout-cache fixed-size-w='779' type-h='fixed' type-w='fixed' />
        </zone>
        <zone h='34667' id='48' name='Total Vehicles by Model Year' w='62813' x='36938' y='65667'>
          <layout-cache minheight='214' type-h='scalable' type-w='fixed' />
        </zone>
        <zone h='37889' id='49' name='Total Vehicles by CAFV Eligibility' w='31000' x='33438' y='28667'>
          <layout-cache cell-count-h='1' cell-count-w='1' non-cell-size-h='50' type-h='cell' type-w='cell' />
        </zone>
        <zone h='37889' id='53' name='Total Vehicles by State' w='34250' x='64750' y='28333'>
          <layout-cache minheight='251' minwidth='202' type-h='scalable' type-w='scalable' />
        </zone>
        <zone h='37556' id='55' name='Top 10 Total Vehicles by Make' w='32688' x='313' y='29333'>
          <layout-cache cell-count-h='10' minwidth='220' non-cell-size-h='133' type-h='cell' type-w='scalable' />
        </zone>
        <zone fixed-size='537' h='17111' id='31' is-fixed='true' name='Total Vehicles' w='28750' x='625' y='6667'>
          <layout-cache fixed-size-h='150' type-h='fixed' type-w='cell' />
        </zone>
        <zone fixed-size='647' h='17111' id='34' is-fixed='true' name=' Avg Electric Range' w='28188' x='29375' y='6000'>
          <layout-cache fixed-size-h='152' type-h='fixed' type-w='cell' />
        </zone>
        <zone h='21778' id='56' name='Total BEV Vehicles ' w='27688' x='57750' y='6667'>
          <layout-cache fixed-size-h='184' fixed-size-w='441' type-h='fixed' type-w='fixed' />
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontcolor='#59a14f' fontname='Tableau Bold' fontsize='22'>Electric Vehicle Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2050' minheight='2050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='60' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='59' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone h='6445' id='46' type-v2='title' w='99000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='154' h='17111' id='34' is-fixed='true' name=' Avg Electric Range' w='28188' x='29375' y='6000'>
                  <layout-cache fixed-size-h='152' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='154' h='17111' id='31' is-fixed='true' name='Total Vehicles' w='28750' x='625' y='6667'>
                  <layout-cache fixed-size-h='150' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='196' h='21778' id='56' is-fixed='true' name='Total BEV Vehicles ' w='27688' x='57750' y='6667'>
                  <layout-cache fixed-size-h='184' fixed-size-w='441' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37889' id='53' is-fixed='true' name='Total Vehicles by State' w='34250' x='64750' y='28333'>
                  <layout-cache minheight='251' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37889' id='49' is-fixed='true' name='Total Vehicles by CAFV Eligibility' w='31000' x='33438' y='28667'>
                  <layout-cache cell-count-h='1' cell-count-w='1' non-cell-size-h='50' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37556' id='55' is-fixed='true' name='Top 10 Total Vehicles by Make' w='32688' x='313' y='29333'>
                  <layout-cache cell-count-h='10' minwidth='220' non-cell-size-h='133' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='34667' id='48' is-fixed='true' name='Total Vehicles by Model Year' w='62813' x='36938' y='65667'>
                  <layout-cache minheight='214' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33556' id='47' is-fixed='true' name='Top 10 Total Vehicles by Model' w='36500' x='250' y='66667'>
                  <layout-cache fixed-size-w='779' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{10636B3C-CDAC-4767-8CCA-EDCA4723E296}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Total Vehicles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</field>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2BFFC354-6BFC-48F6-B6DD-6729C69EB641}' />
    </window>
    <window class='worksheet' name=' Avg Electric Range'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</field>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D5D4C256-1A08-4667-8228-0460B3473BE4}' />
    </window>
    <window class='worksheet' name='Total BEV Vehicles '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model Year:qk]' show-domain='false' show-null-ctrls='false' size='28' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{63A8381E-9604-470A-BD7E-236D4EC100A4}' />
    </window>
    <window class='worksheet' name='Total BHEV Vehicles '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</field>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CF35F0E-561E-4285-A40D-346070966C8F}' />
    </window>
    <window class='worksheet' name='Total Vehicles by Model Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</field>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model Year:qk]</field>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D3DA50C6-D5E6-4ACA-AA6A-1AD58DF9DC8A}' />
    </window>
    <window class='worksheet' name='Total Vehicles by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0akvjy718uikfc1bx1zy1066tbva].[usr:Calculation_402227769648648192:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F678665A-38CE-4DBE-AAD6-887482E602D4}' />
    </window>
    <window class='worksheet' name='Top 10 Total Vehicles by Make'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='16' type='pages' />
            <card size='28' type='filters' />
            <card size='111' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</field>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD34BEE4-37C2-4078-8DE0-2CC37C430532}' />
    </window>
    <window class='worksheet' name='Total Vehicles by CAFV Eligibility'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</field>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C20F5943-9180-42C1-B940-8224BFAC8FB8}' />
    </window>
    <window class='worksheet' name='Top 10 Total Vehicles by Model'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[:Measure Names]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;[federated.0akvjy718uikfc1bx1zy1066tbva]&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[:Measure Names]</field>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Electric Vehicle Type:nk]</field>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</field>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C3881A1-95FA-4D5B-B2FE-5E7D873B44C1}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Make:nk]</field>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model Year:qk]</field>
            <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{351C7B5B-E58A-4909-8881-2AC6ABAF1602}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name=' Avg Electric Range'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Top 10 Total Vehicles by Make'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Top 10 Total Vehicles by Model' />
        <viewpoint name='Total BEV Vehicles ' />
        <viewpoint name='Total Vehicles'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Total Vehicles by CAFV Eligibility'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0akvjy718uikfc1bx1zy1066tbva].[none:Clean Alternative Fuel Vehicle (CAFV) Eligibility:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Total Vehicles by Model Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Vehicles by State'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='47' />
      <simple-id uuid='{6CDA8CFF-93E2-4E26-AE83-A171BC4FE77A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='106' name=' Avg Electric Range' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='141'>
      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
      s998PDjzYboRXkKcpiocw3YUbg036wkA1iIjsxstrU7w41pb0J2ZMXkDO/s6ESQkYcXXBnE7
      4s1RfLAoGi9H97Tjg/3v41zXDTh3x7/iBm7h04bjODv2PTz2zXk9MetYNIWlHdW7DqLJDfe9
      4JE7M38iHM06d3Gj+UPUfNSEzquD8LsY/0T48Ry8uP1ZrJ/l5SnWp7BYFI09Yj0aiy5PslQo
      GqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEp
      GqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqEpGqFZtmO5
      d/Oeov1ZcWlx977meDfvKcqfFUGs71huVTReznua80woE/vRWHVP4+W8p7nOhIoHVkUzjSfz
      nohj4oRlN8ITvJn3FM0xmvdkAw/nPUVzTDzOe7IsGgdt1aWo972M0uJwY3dWwZfYj4EAgKmX
      qMAA+hOn3ovMtk60x8zNyXdy53E171l1T+PlvKc5z4SKAxZF4+W8p2iOiV8Wje7xct5T9D8r
      nFgf3WNRNPaI9WgsujzJUqFohKZohKZohKZohKZohKZohKZohKZohKZohKZohKZohKZohKZo
      hKZohKZohKZohKZohKZohKZohKZohKZohKZohKZohKZohKZohKZohKZohKZohKZohKZohKZo
      hKZohKZohPY/ClM88yNubJkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 Total Vehicles by Make' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Total Vehicles by Model' width='192'>
      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
      IgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='138' name='Total BEV Vehicles ' width='192'>
      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
    </thumbnail>
    <thumbnail height='138' name='Total BHEV Vehicles ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACKCAYAAAD8H0UNAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAH7klEQVR4nO3bf2wT5x3H8Y/tXBw7tgmGJMYkZCkQQoC0tCgRg0FLWUsqpm2l09ppGtU0
      NmlI7Tat1bRpq0Dbuo5qW7V22lZNbNW0TtuEJoEKoqwtjFAMTaAhISTAWBJ+OAlxnMSxYzv2
      7Q+El8N2IOQcpPt+Xv/l8d35Ibp3/NydMamqqoJIKPO9ngDRvcQASDQGQKIxABKNAZBoDIBE
      YwAkGgMg0RgAicYASDQGQKIxABKNAZBoDIBEYwAkGgMg0RgAicYASDQGQKLl3esJEN0NX1cj
      Xju8SzO25f6nseX+p6d0HH4CkGj8BJhhgfAAfvTOiwiEB6Z9LLd9DnY+8XO47XN0mNnkXju8
      C76uRs3Y8+tfQH3Fmpy/dy7xE4BEYwAkGgMg0XgNMMPc9jl4/ak/ZHztfH8HfnZoByLxsGb7
      mVrnS8RPABKNnwAGNjw2jH91HsCxS0fQO+LHeHIcAOCwOrGkpAYNSzejunQZzKb0v4OReBgv
      H9qBC/0dWY9/4z78rrTxbHeHYokY2q61oKnnBNr8LRgMBxBLxAAAJpMJTqsLi4urJ52X3hiA
      AcUTcext24O9rXsQHY+mvR6KjqCpx4emHh8q3JXYvvbbKCtakLP5BMID+P2x13HWfyYV4a1U
      VcXw2FBqXlUlS/Hcuu/mfOnHJZDBjMUjeOPoL/CP029nPPlv1RW4hB0Hvo9Tlz/K2ZwGRq/j
      fH9H1pM/k86+dvz6yKsYjYVyNi+AARhKIpnAH0+8iRNdH05pv9FYCL85+itcuN6Zo5ndnY6+
      drx//t2cvgeXQAZytvcMfF3HNGMmkwmryuvxpYe2osThQTwZh++/jfjzR7sxEh1ObTcaC+Gf
      LX/H8+tfhGJRYFPs2NnwSup1PZ4Em01mlBctwLpFj6LWuxKlTg/yzHkYT47jrL8Vu32/Q+/I
      Nc0+J7qP49Gqx2FT7FP5VdwxBmAQiWQCB8/tR3R8TDO+pnI9tq3eDsWiAADyLfn41MJHUOL0
      4NX3fqJZYrT5z+B8fwdqPMt1nZtNsWFr3dfwYFkdHFZH2ut55jzUeh/ACxt+gB8f/CGCkcHU
      a/0jvQhGgjkLgEsgg+gL9abdsfG4vHjmwa+kTv6JlpQsxaalmzVj0fExNPX4dJ9bWdECrFu4
      IePJP9E813wsLq7WjMUSMYSiI7rP6SYGYBD+4asIxbQnSqX7PhTZZmfdp9a7Mu0va0+wK3Vr
      cqaZTKYZufU5EZdABuEfuYZEMqEZ884qg8lkyrrPnMK5sCk2zZPngdHriMTDyLfk6z7HpJpE
      Z/85HPvPEbT3tmFoLJjTv+53ggEYRDg2mjZWVlQ+6T42xQZ34VzNV7Oj49G0kKZLVVV8fPUU
      dvt+i/5Qn67Hni4GQDnXeOkw3vzwDcQT8Xs9lTQMwCDs+YVpY5eDPaivyL5PJB5BYPS6Zsya
      Z4XFbNFtXv7hq3i7+S3Nya9YFKypXI9PVzdg/qxyzXIr0+3WXGIABuFxzoPFbNEsX64OXYaq
      qlmvA26s9yOasRvXBfrdcjx1pQmD4UDqZ8WiYNvq7Vh738O6vcd08C6QQXhcXjjynZqxc31n
      0x4sTXSy+7jmAhgAyosqdL0Avhzs1vzstLpQ41mh2/GniwEYRImjFIuKl2jGBsMB7Gn5W8a1
      d6avGVjzCvBQeX3G42e6oD59pRmqqk46r3BMG1gimcj6HaVwbBRDEx6CzQQugQzCYrbgseoG
      tF77WPM0uPHSYYSiw/jyqq9inms+4sk4jl78AH9p/lPanaNlnhVYfEtEN928pTrxhP/3xfdh
      U2z4zLInMdvuRlJNIhgZhF2xo0CxAQDcdrfmOENjQfy1+S08W/d1zLa7EUvEcKG/E+927EdT
      j29KX5jTAwMwkJrSFaiv+CSOXHwvNaaqKk5facbpK82T7luY78Dnar+Q8akx8P+HahPX80k1
      iQPt+3CgfV9qzKbY8b2NL6VCqvEsx8GOdzTXJie7j+Nk9/G7+jfqjUsgA7GYLXi2bhvqKlZP
      ab/CfAe+ufZbWDS3Kus2HpcXG6s2TfpgLZMazwosnpv5U+VWxY4SlDo9Uzr+dDEAgylQbNi+
      9jt46oFnYM2z3nb7CnclXtr0U6wsW3XbbTcv+zweW/LElL6uYFPs+Maa5+CdVZZ1G7PJjIcX
      bcTLm3+JT7gX3vGx9cAlkAEpFgVP1n4RG6sa7vq/RGY77ta6bdhQ9Tj2te5Bq78Fwchg6lar
      0+pCVXE1XAUuzX6lTg92NryC/e178cGFQwiEB6CqKlwFs7CybBU+u3wLPC6v7r+HO2FSb3cZ
      T2RgXAKRaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCi
      MQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCi
      MQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCi
      MQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCi
      MQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCi
      MQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaP8DJsBT0eceWQQAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='104' name='Total Vehicles' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABoCAYAAACnk/+EAAAACXBIWXMAABJ0AAASdAHeZh94
      AAABLklEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9J4UEzIW0/PwAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Total Vehicles by CAFV Eligibility' width='192'>
      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
      gYFIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Vehicles by Model Year' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAUCklEQVR4nO3d+W8b553H8fdcnCHFQ7Ss+7Qdx46TNKnTbLNYFP1l/4/9V7K/LLZYoNgW
      xRbdRdFi0WIXBdJt7sRp0/RKskmaplnF1mlZsi4eIiVeQ3KOZ3+QzNiJj9imJMvzfQEBxEic
      D/l4PjPDIeehppRSCBFR+mE/ACEOk3nth0KhgG3bBxYchiG6fnD9k7yjnbdfmZ0C2LZNOp3u
      6sJvx/d9TNO88x9KnuTtY6YcAolIkwKISJMCiEiTAohIkwKISJMCiEiTAohIkwKISJMCiEiT
      AohIkwKISJMCiEiTAohIkwKISOt8tjQMQ3zfP7BgyZO8ByGzUwBd1zEMo6sLvxPJk7zDzrzh
      6gJN07q68DuRPMk77Ex5DSAiTQogIk0KICJNCiAiTQogIk0KICJNCiAiTQogIk0KICJNCiAi
      TQogIk0KICJNCiAiTQogIk0KICJNCiAiTQogIk0KICJNCiAirXNNsFKKg/7KYMmTvMPOvKEA
      QRB0deG3E4bhgWVJ3tHP26/MG6ZFeZi/ZlPyjnbefmXKawARaVIAEWlSABFpUgARaVIAEWlS
      ABFpUgARaVIAEWlSABFpUgARaVIAEWlSABFpUgARaVIAEWlSABFpUgARaVIAEWlSABFpUgAR
      aVIAEWmdK4zDMMT3/QMLPsgZKCTv6OftV+ahzQoBSJ7kHXqmHAKJSJMCiEiTAohIkwKISJMC
      iEiTAohIkwKISJMCiEiTAohIkwKISJMCiEiTAohIkwKISJMCiEiTAohIkwKISJMCiEiTAohI
      kwKISJMCiEiTWSEk70jk7VemzAoheUcmbz8y5RBIRJoUQESaFEBEmhRARJoUQESaFEBEmhRA
      RJoUQESaFEBEmhRARJoUQESaFEBEmhRARJoUQESaFEBEmhRARJoUQESaFEBEmhRARJoUQESa
      zAoheUcib78yZVYIyTsyefuRKYdAItKkACLSpAAi0qQAItKkACLSpAAi0qQAIrKUUlIAEV2/
      W3ybg38nQ4hDppTiwuxr/Oyjn0gBRLSEKuSFT/6blz/7JaePPyoFENHhhz6/+MvPeP3iy5wZ
      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
      RNr/A8ICy4xxNEDKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Vehicles by State' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
